import { Module } from '@nestjs/common';
import { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';
import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';
import { APP_INTERCEPTOR } from '@nestjs/core/constants';
import { DataLoaderInterceptor } from 'nestjs-dataloader';
import { <%= className %> } from './<%= fileName %>.entity';
import { <%= className %>Loader } from './<%= fileName %>.loader';
import { <%= className %>Service } from './<%= fileName %>.service';
import { <%= className %>Resolver } from './<%= fileName %>.resolver';
import { <%= className %>Subscriber } from './<%= fileName %>.subscriber';

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQueryTypeOrmModule.forFeature([<%= className %>])],
      services: [<%= className %>QueryService],
      resolvers: [],
    }),
  ],
  providers: [
    <%= className %>Resolver,
    <%= className %>Loader,
    <%= className %>Subscriber,
    {
      provide: APP_INTERCEPTOR,
      useClass: DataLoaderInterceptor,
    },
  ],
})
export class <%= className %>Module {}
